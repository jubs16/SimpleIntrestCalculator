{"ast":null,"code":"import { CurlHelper } from './lib/CurlHelper'; // thanks to https://github.com/uyu423\n\nfunction defaultLogCallback(curlResult, err) {\n  const command = curlResult.command;\n\n  if (err) {\n    console.error(err);\n  } else {\n    console.info(command);\n  }\n}\n\nexport default ((instance, callback = defaultLogCallback) => {\n  instance.interceptors.request.use(req => {\n    try {\n      const curl = new CurlHelper(req);\n      req.curlObject = curl;\n      req.curlCommand = curl.generateCommand();\n    } catch (err) {\n      // Even if the axios middleware is stopped, no error should occur outside.\n      callback(null, err);\n    } finally {\n      callback({\n        command: req.curlCommand,\n        object: req.curlObject\n      });\n      return req;\n    }\n  });\n});","map":{"version":3,"sources":["/Users/jubert/Desktop/lendico/fullstack/client/node_modules/axios-curlirize/src/curlirize.js"],"names":["CurlHelper","defaultLogCallback","curlResult","err","command","console","error","info","instance","callback","interceptors","request","use","req","curl","curlObject","curlCommand","generateCommand","object"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B,C,CAEA;;AACA,SAASC,kBAAT,CAA4BC,UAA5B,EAAwCC,GAAxC,EAA6C;AAAA,QACnCC,OADmC,GACvBF,UADuB,CACnCE,OADmC;;AAE3C,MAAID,GAAJ,EAAS;AACPE,IAAAA,OAAO,CAACC,KAAR,CAAcH,GAAd;AACD,GAFD,MAEO;AACLE,IAAAA,OAAO,CAACE,IAAR,CAAaH,OAAb;AACD;AACF;;AAED,gBAAe,CAACI,QAAD,EAAWC,QAAQ,GAAGR,kBAAtB,KAA6C;AAC1DO,EAAAA,QAAQ,CAACE,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAmCC,GAAD,IAAS;AACzC,QAAI;AACF,YAAMC,IAAI,GAAG,IAAId,UAAJ,CAAea,GAAf,CAAb;AACAA,MAAAA,GAAG,CAACE,UAAJ,GAAiBD,IAAjB;AACAD,MAAAA,GAAG,CAACG,WAAJ,GAAkBF,IAAI,CAACG,eAAL,EAAlB;AACD,KAJD,CAIE,OAAOd,GAAP,EAAY;AACZ;AACAM,MAAAA,QAAQ,CAAC,IAAD,EAAON,GAAP,CAAR;AACD,KAPD,SAOU;AACRM,MAAAA,QAAQ,CAAC;AACPL,QAAAA,OAAO,EAAES,GAAG,CAACG,WADN;AAEPE,QAAAA,MAAM,EAAEL,GAAG,CAACE;AAFL,OAAD,CAAR;AAIA,aAAOF,GAAP;AACD;AACF,GAfD;AAgBD,CAjBD","sourcesContent":["import { CurlHelper } from './lib/CurlHelper';\n\n// thanks to https://github.com/uyu423\nfunction defaultLogCallback(curlResult, err) {\n  const { command } = curlResult;\n  if (err) {\n    console.error(err);\n  } else {\n    console.info(command);\n  }\n}\n\nexport default (instance, callback = defaultLogCallback) => {\n  instance.interceptors.request.use((req) => {\n    try {\n      const curl = new CurlHelper(req);\n      req.curlObject = curl;\n      req.curlCommand = curl.generateCommand();\n    } catch (err) {\n      // Even if the axios middleware is stopped, no error should occur outside.\n      callback(null, err);\n    } finally {\n      callback({\n        command: req.curlCommand,\n        object: req.curlObject,\n      });\n      return req;\n    }\n  });\n};\n\n"]},"metadata":{},"sourceType":"module"}